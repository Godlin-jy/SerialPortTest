<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--图标按钮-->
    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/> <!-- 设置按钮背景为透明 -->
        <Setter Property="Foreground" Value="Gray"/> <!-- 设置按钮前景颜色为灰色 -->
        <Setter Property="Template"> <!-- 按钮模板 -->
            <Setter.Value> 
                <ControlTemplate TargetType="{x:Type Button}">
                    <!-- 按钮边框 -->
                    <Border x:Name="btnBorder" CornerRadius="5"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0">
                        <!-- 图标路径 -->
                        <Path Data="{TemplateBinding Content}"  Stretch="Uniform" Fill="{TemplateBinding Foreground}"
                          HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <!-- 按钮触发器 -->
                    <ControlTemplate.Triggers>
                        <!-- 鼠标悬停触发器 -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- 设置前景颜色为绿色 -->
                            <Setter Property="Foreground" Value="Green"/>
                        </Trigger>
                        <!-- 按钮按下触发器 -->
                        <Trigger Property="IsPressed" Value="True">
                            <!-- 设置前景颜色为绿色 -->
                            <Setter Property="Foreground" Value="Green"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--普通按钮样式-->
    <Style x:Key="GeneralButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" CornerRadius="10"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="2" Color="Black" Opacity="0.5" BlurRadius="2" Direction="300"/>
                        </Border.Effect>
                        <ContentPresenter x:Name="ContentPresenter"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- 多条件触发器：当按钮内容为“打开串口”且鼠标悬停时 -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Content" Value="打开串口"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="btnBorder" Property="Background" Value="green"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Content" Value="关闭串口"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="btnBorder" Property="Background" Value="red"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>